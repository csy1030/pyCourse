中建立队列模型，进程通过队列将消息存入，或者从队列里去除完进程通信。
	2. 实现方法
		from multiprocessing import Queue
		
		q = Queue(maxsize = 0)
		功能：创建队列对象
		参数：最多存放消息个数
		返回值：队列对象
		
		q.put（data,[block,timeout])
		功能：向队列存入消息
		参数：data   要存入的内容
				block  设置是否阻塞  False 为非阻塞
				timeout  超时检测
		
		q.get([block , timeout])
		功能：从队列取出消息
		参数：block  设置是否阻塞  False为非阻塞
		
		
		
	代码示例：
	
	# 消息队列通信
	from multiprocessing import Queue, Process
	from time import sleep
	from random import randint
	
	# 创建消息队列
	q = Queue(5)
	
	def request():
	    for i in range(20):
	        x = randint(0,100)
	        y = randint(0,100)
	        q.put((x,y))
	
	def handle():
	    while True:
	        sleep(0.5)
	        try:
	            x,y = q.get(timeout = 3)
	        except:
	            break
	        else:
	            print("%d + %d = %d" % (x,y,x+y))
	
	p1 = Process(target = request)
	p2 = Process(target = handle)
	p1.start()
	p2.start()
	p1.join()
	p2.join()
	

